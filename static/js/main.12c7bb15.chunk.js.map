{"version":3,"sources":["Components/Header/Header.js","Components/Order/Order.js","Components/Menu/Menu.js","Components/Cart/Cart.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","grow","flexGrow","title","display","paddingLeft","breakpoints","up","Header","cartItems","setOpenCart","classes","className","AppBar","position","Toolbar","Typography","variant","noWrap","sectionDesktop","IconButton","color","onClick","Badge","badgeContent","length","form","flexDirection","margin","width","formControl","marginTop","spacing","minWidth","formControlLabel","Order","open","setOpen","tempItem","setOpenSuccess","setCartItems","useState","size","setSize","amount","setAmount","handleClose","Dialog","fullWidth","maxWidth","onClose","DialogTitle","id","name","DialogContent","DialogContentText","prices","small","medium","large","noValidate","FormControl","InputLabel","htmlFor","Select","autoFocus","value","onChange","event","console","log","target","inputProps","MenuItem","TextField","label","type","InputLabelProps","shrink","InputProps","max","min","Button","tempData","price","push","currentItems","newCart","concat","DialogActions","menuItems","data","menu","root","fontSize","description","pos","marginBottom","MenuWrapper","styled","div","MenuItems","Menu","setTempItem","React","HtmlTooltip","withStyles","tooltip","backgroundColor","typography","pxToRem","border","Tooltip","map","item","index","updateOrder","Small","Medium","Large","Card","CardContent","gutterBottom","src","image","alt","CartWrapper","Cart","openCart","setOrderSuccess","currency","Intl","NumberFormat","style","subtotal","reduce","x","y","parseFloat","taxes","total","palette","background","paper","List","ListItem","ListItemAvatar","arrow","newItems","filter","removeItem","ListItemText","primary","secondary","format","Divider","component","Alert","props","elevation","App","orderSuccess","reason","handleCloseOrder","useEffect","Snackbar","autoHideDuration","severity","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sVAUMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACJC,SAAU,GAEZC,MAAM,aACJC,QAAS,OACTC,YAAa,QACZL,EAAMM,YAAYC,GAAG,MAAQ,CAC5BH,QAAS,cA8BAI,EAzBA,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,UAAWC,EAAkB,EAAlBA,YACrBC,EAAUb,IAEhB,OACE,qBAAKc,UAAWD,EAAQV,KAAxB,SACE,cAACY,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACE,eAACC,EAAA,EAAD,WACA,cAAC,IAAD,IACE,cAACC,EAAA,EAAD,CAAYJ,UAAWD,EAAQR,MAAOc,QAAQ,KAAKC,QAAM,EAAzD,wBAGA,qBAAKN,UAAWD,EAAQV,OACxB,qBAAKW,UAAWD,EAAQQ,eAAxB,SACE,cAACC,EAAA,EAAD,CAAY,aAAW,kBAAkBC,MAAM,UAAUC,QAAS,kBAAMZ,GAAY,IAApF,SACE,cAACa,EAAA,EAAD,CAAOC,aAAcf,EAAUgB,OAAQJ,MAAM,YAA7C,SACE,cAAC,IAAD,kB,6JCxBZvB,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvC0B,KAAM,CACJtB,QAAS,OACTuB,cAAe,SACfC,OAAQ,OACRC,MAAO,eAETC,YAAa,CACXC,UAAW/B,EAAMgC,QAAQ,GACzBC,SAAU,KAEZC,iBAAkB,CAChBH,UAAW/B,EAAMgC,QAAQ,QA+GdG,EA3GD,SAAC,GAA2E,IAAxEC,EAAuE,EAAvEA,KAAMC,EAAiE,EAAjEA,QAASC,EAAwD,EAAxDA,SAAUC,EAA8C,EAA9CA,eAAgB9B,EAA8B,EAA9BA,UAAW+B,EAAmB,EAAnBA,aAC9D7B,EAAUb,IAChB,EAAwB2C,mBAAS,UAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAAS,KAArC,mBAAOG,EAAP,KAAeC,EAAf,KAEMC,EAAc,WAClBT,GAAQ,IAcV,OACE,mCACE,eAACU,EAAA,EAAD,CACEC,WAAW,EACXC,SAAU,KACVb,KAAMA,EACNc,QAASJ,EACT,kBAAgB,yBALlB,UAOE,eAACK,EAAA,EAAD,CAAaC,GAAG,yBAAhB,4BAAyDd,EAASe,QAClE,eAACC,EAAA,EAAD,WACI,iCACF,cAACC,EAAA,EAAD,UACGjB,EAASb,QAAU,gDAAWa,EAASkB,OAAOC,MAA3B,aAA4CnB,EAASkB,OAAOE,OAA5D,YAA6EpB,EAASkB,OAAOG,MAA7F,WAGtB,uBAAM/C,UAAWD,EAAQe,KAAMkC,YAAU,EAAzC,UACE,eAACC,EAAA,EAAD,CAAajD,UAAWD,EAAQmB,YAAhC,UACA,cAACgC,EAAA,EAAD,CAAYC,QAAQ,cAApB,kBACE,eAACC,EAAA,EAAD,CACEC,WAAS,EACTC,MAAOxB,EACPyB,SAjCW,SAACC,GACxBC,QAAQC,IAAIF,EAAMG,OAAOL,OACzBvB,EAAQyB,EAAMG,OAAOL,QAgCTM,WAAY,CACVnB,KAAM,cACND,GAAI,eANR,UASE,cAACqB,EAAA,EAAD,CAAUP,MAAM,QAAhB,mBACA,cAACO,EAAA,EAAD,CAAUP,MAAM,SAAhB,oBACA,cAACO,EAAA,EAAD,CAAUP,MAAM,QAAhB,yBAGJ,cAACL,EAAA,EAAD,CAAajD,UAAWD,EAAQmB,YAAhC,SACA,cAAC4C,EAAA,EAAD,CACItB,GAAG,kBACHuB,MAAM,SACNC,KAAK,SACLC,gBAAiB,CACbC,QAAQ,GAEZC,WAAY,CACRP,WAAY,CACRQ,IAAK,GAAIC,IAAK,IAGtBd,SApDa,SAACC,GAC1BC,QAAQC,IAAIF,EAAMG,OAAOL,OACzBrB,EAAUuB,EAAMG,OAAOL,YAqDf,uBACA,cAACgB,EAAA,EAAD,CACI5D,QAAS,WACL,GAAIsB,EAAS,GAAKA,EAAS,GAAI,CAC7B,IAAIuC,EAAW,GACfd,QAAQC,IAAI,YAAa7D,GACzB6B,EAASI,KAAOA,EAChBJ,EAASM,OAASA,EAClBN,EAAS8C,MAAQ9C,EAASkB,OAAOd,GACjCyC,EAASE,KAAK/C,GACd+B,QAAQC,IAAI,WAAYhC,GACxB+B,QAAQC,IAAI,WAAYa,GACxB,IAAMG,EAAe7E,EACrB4D,QAAQC,IAAI,eAAgBgB,GAC5B,IAAMC,EAAUJ,EAASK,OAAOF,GAChCjB,QAAQC,IAAI,UAAWiB,GACvB/C,EAAa+C,GACbhD,GAAe,GACfO,MAGN7B,QAAQ,YACRI,MAAM,UArBV,uBA2BJ,cAACoE,EAAA,EAAD,UACE,cAACP,EAAA,EAAD,CAAQ5D,QAASwB,EAAazB,MAAM,UAApC,2BCrHJqE,EAAYC,EAAKC,KAEjB9F,EAAYC,YAAW,CACzB8F,KAAM,CACJ5D,SAAU,KAEZ9B,MAAO,CACL2F,SAAU,IAEZC,YAAa,CACTD,SAAU,IAEdE,IAAK,CACHC,aAAc,MAIZC,EAAcC,IAAOC,IAAV,6KAQXC,EAAYF,IAAOC,IAAV,2JAgEFE,EAxDF,SAAC,GAAwE,IAAtE7F,EAAqE,EAArEA,UAAW+B,EAA0D,EAA1DA,aAAcF,EAA4C,EAA5CA,SAAUiE,EAAkC,EAAlCA,YAAahE,EAAqB,EAArBA,eAC9D,EAAwBiE,IAAM/D,UAAS,GAAvC,mBAAOL,EAAP,KAAaC,EAAb,KAOQ1B,EAAUb,IAEV2G,EAAcC,aAAW,SAAC1G,GAAD,MAAY,CACzC2G,QAAS,CACPC,gBAAiB,UACjBvF,MAAO,sBACP4B,SAAU,IACV6C,SAAU9F,EAAM6G,WAAWC,QAAQ,IACnCC,OAAQ,wBANQL,CAQhBM,KAEJ,OACI,eAACd,EAAD,WACE,cAAC,EAAD,CAAO9D,KAAMA,EAAMC,QAASA,EAASC,SAAUA,EAAUC,eAAgBA,EAAgB9B,UAAWA,EAAW+B,aAAcA,IAC3HkD,EAAUuB,KAAI,SAACC,EAAMC,GAAP,OACd,cAACd,EAAD,CAAuB/E,QAAS,kBArBtB,SAAC4F,GACnBX,EAAYW,GACZ7E,GAAQ,GAmBsC+E,CAAYF,IAAlD,SACI,cAACT,EAAD,CACEtG,MACE,qCACE,cAACa,EAAA,EAAD,CAAYK,MAAM,UAAlB,4BACA,6CAAgB6F,EAAK1D,OAAO6D,MAA5B,aAA6CH,EAAK1D,OAAO8D,OAAzD,YAA0EJ,EAAK1D,OAAO+D,YAJ5F,SAQE,cAACC,EAAA,EAAD,CAAM5G,UAAWD,EAAQkF,KAAzB,SACA,eAAC4B,EAAA,EAAD,WACI,cAACzG,EAAA,EAAD,CAAYJ,UAAWD,EAAQR,MAAOuH,cAAY,EAAlD,SACCR,EAAK7D,OAEN,qBAAKsE,IAAKT,EAAKU,MAAOC,IAAI,KAC1B,eAAC7G,EAAA,EAAD,CAAYJ,UAAWD,EAAQoF,YAAa1E,MAAM,gBAAlD,UACC6F,EAAKnB,YAAY,uBAAM,uCAAUmB,EAAK1D,OAAO6D,oBAhBxCF,U,kECjDtBW,GAAc3B,IAAOC,IAAV,2HAiGF2B,GA1FF,SAAC,GAAwF,IAAtFtH,EAAqF,EAArFA,UAAW+B,EAA0E,EAA1EA,aAAcD,EAA4D,EAA5DA,eAAgByF,EAA4C,EAA5CA,SAAUtH,EAAkC,EAAlCA,YAAYuH,EAAsB,EAAtBA,gBACzEC,EAAW,IAAIC,KAAKC,aAAa,QAAS,CAC5CC,MAAO,WACPH,SAAU,QASRtF,EAASnC,EAAYA,EAAUwG,KAAI,SAAAC,GAAI,OAAIA,EAAK9B,MAAQ8B,EAAKtE,UAAU,EACvE0F,EAAY1F,EAAOnB,OAAS,EAAKmB,EAAO2F,QAAO,SAACC,EAAGC,GAAJ,OAAUC,WAAWF,GAAKE,WAAWD,MAAM,EAC1FE,EAAmB,IAAXL,EACRM,EAAQN,EAAWK,EAWjBhI,EATUZ,aAAW,SAACC,GAAD,MAAY,CACrC6F,KAAM,CACJhE,MAAO,OACPoB,SAAU,IACV2D,gBAAiB5G,EAAM6I,QAAQC,WAAWC,UAK9BjJ,GAEVgD,EAAc,WAClBpC,GAAY,IAGZ,OACI,cAACoH,GAAD,UACE,eAAC/E,EAAA,EAAD,CACFC,WAAW,EACXC,SAAU,KACVb,KAAM4F,EACN9E,QAASJ,EACT,kBAAgB,yBALd,UAOF,cAACK,EAAA,EAAD,CAAaC,GAAG,yBAAhB,0BACA,cAACE,EAAA,EAAD,UACI,iCACF,cAACC,EAAA,EAAD,UACA,eAACyF,EAAA,EAAD,CAAMpI,UAAWD,EAAQkF,KAAzB,UACEpF,GAAaA,EAAUgB,OAAS,EACjChB,EAAUwG,KAAI,SAACC,EAAMC,GAAP,OACb,gCACS,eAAC8B,GAAA,EAAD,WACG,cAACC,GAAA,EAAD,UACI,cAAClC,EAAA,EAAD,CAAS7G,MAAM,SAASgJ,OAAK,EAA7B,SACA,cAAC/H,EAAA,EAAD,CAAY,aAAW,SAAvB,SACI,cAAC,IAAD,CAAYE,QAAS,kBA/ClC,SAAC4F,GAClB,IAAMkC,EAAW3I,EAAU4I,QAAO,SAAAb,GAAC,OAAIA,EAAEpF,KAAO8D,EAAK9D,IAAMoF,EAAE9F,OAASwE,EAAKxE,QAC3EF,EAAa4G,GACb7G,GAAe,GA4C0C+G,CAAWpC,YAI9C,cAACqC,GAAA,EAAD,CAAcC,QAAO,WAAMtC,EAAKtE,OAAX,YAAqBsE,EAAKxE,KAA1B,YAAkCwE,EAAK7D,MAAQoG,UAAS,UAAKvB,EAASwB,OAAOhB,WAAWxB,EAAK9B,MAAQ8B,EAAKtE,eAEnI,cAAC+G,GAAA,EAAD,CAAS1I,QAAQ,QAAQ2I,UAAU,SAXjCzC,MAcR,sBACD1G,EAAUgB,OAAS,GACpB,qCACI,2CAAcyG,EAASwB,OAAOpB,GAAU,uBAAxC,QACMJ,EAASwB,OAAOf,GAAO,0BAC7B,wCAAWT,EAASwB,OAAOd,MAAW,uBAAM,uBAC5C,cAAC1D,EAAA,EAAD,CAAQjE,QAAQ,YAAYI,MAAM,UAAUC,QAAS,WAAQZ,GAAY,GAAQ8B,EAAa,IAAKyF,GAAgB,IAAnH,kCAOR,cAACxC,EAAA,EAAD,UACE,cAACP,EAAA,EAAD,CAAQ5D,QAASwB,EAAazB,MAAM,UAApC,2B,oBC9FJwI,GAAQ,SAACC,GACb,OAAO,cAAC,KAAD,aAAUC,UAAW,EAAG9I,QAAQ,UAAa6I,KA8CvCE,GA3CH,WACV,MAAkCvH,mBAAS,IAA3C,mBAAOhC,EAAP,KAAkB+B,EAAlB,KACA,EAAgCC,mBAAS,IAAzC,mBAAOH,EAAP,KAAiBiE,EAAjB,KACA,EAA+B9D,oBAAS,GAAxC,mBAAOL,EAAP,KAAaG,EAAb,KACA,EAAgCE,oBAAS,GAAzC,mBAAOuF,EAAP,KAAiBtH,EAAjB,KACA,EAAwC+B,oBAAS,GAAjD,mBAAOwH,EAAP,KAAqBhC,EAArB,KAEMnF,EAAc,SAACsB,EAAO8F,GACX,cAAXA,GAGJ3H,GAAe,IAGX4H,EAAmB,SAAC/F,EAAO8F,GAChB,cAAXA,GAGJjC,GAAgB,IAMlB,OAHAmC,qBAAU,cACP,CAAC3J,IAGF,sBAAKG,UAAU,MAAf,UACA,cAACyJ,GAAA,EAAD,CAAUjI,KAAMA,EAAMkI,iBAAkB,IAAMpH,QAASJ,EAAvD,SACI,cAAC,GAAD,CAAOI,QAASJ,EAAayH,SAAS,UAAtC,6BAIF,cAACF,GAAA,EAAD,CAAUjI,KAAM6H,EAAcK,iBAAkB,IAAMpH,QAASiH,EAA/D,SACE,cAAC,GAAD,CAAOjH,QAASiH,EAAkBI,SAAS,OAA3C,6BAIF,cAAC,EAAD,CAAQ9J,UAAWA,EAAWC,YAAaA,IACvC,cAAC,EAAD,CAAMD,UAAWA,EAAW+B,aAAcA,EAAcF,SAAUA,EAAUiE,YAAaA,EAAahE,eAAgBA,IACtH,cAAC,GAAD,CAAM9B,UAAWA,EAAW+B,aAAcA,EAAcD,eAAgBA,EAAgByF,SAAUA,EAAUtH,YAAaA,EAAauH,gBAAiBA,QCtClJuC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.12c7bb15.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport CoffeeIcon from '@material-ui/icons/LocalCafe';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    grow: {\r\n      flexGrow: 1,\r\n    },\r\n    title: {\r\n      display: 'none',\r\n      paddingLeft: '1rem',\r\n      [theme.breakpoints.up('sm')]: {\r\n        display: 'block',\r\n      },\r\n    },\r\n  }));\r\n  \r\n  const Header = ({ cartItems, setOpenCart }) => {\r\n    const classes = useStyles();\r\n  \r\n    return (\r\n      <div className={classes.grow}>\r\n        <AppBar position=\"static\">\r\n          <Toolbar>\r\n          <CoffeeIcon />\r\n            <Typography className={classes.title} variant=\"h6\" noWrap>\r\n              Coffee App\r\n            </Typography>  \r\n            <div className={classes.grow} />\r\n            <div className={classes.sectionDesktop}>\r\n              <IconButton aria-label=\"show cart items\" color=\"inherit\" onClick={() => setOpenCart(true)}>\r\n                <Badge badgeContent={cartItems.length} color=\"secondary\">\r\n                  <ShoppingCartIcon />\r\n                </Badge>\r\n              </IconButton>\r\n            </div>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  export default Header;","import { React, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  form: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    margin: 'auto', \r\n    width: 'fit-content',\r\n  },\r\n  formControl: {\r\n    marginTop: theme.spacing(2),\r\n    minWidth: 120,\r\n  },\r\n  formControlLabel: {\r\n    marginTop: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst Order = ( { open, setOpen, tempItem, setOpenSuccess, cartItems, setCartItems }) => {\r\n  const classes = useStyles();\r\n  const [size, setSize] = useState('Medium');\r\n  const [amount, setAmount] = useState('0');\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleSizeChange = (event) => {\r\n    console.log(event.target.value);\r\n    setSize(event.target.value);\r\n  };\r\n\r\n  const handleAmountChange = (event) => {\r\n    console.log(event.target.value);\r\n    setAmount(event.target.value);\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      <Dialog\r\n        fullWidth={true}\r\n        maxWidth={'sm'}\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"max-width-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"max-width-dialog-title\">Customize your {tempItem.name}</DialogTitle>\r\n        <DialogContent>\r\n            <center>\r\n          <DialogContentText>\r\n            {tempItem.length && <>Small: ${tempItem.prices.small} Medium: ${tempItem.prices.medium} Large: ${tempItem.prices.large} </>}\r\n          </DialogContentText>\r\n          </center>\r\n          <form className={classes.form} noValidate>\r\n            <FormControl className={classes.formControl}>\r\n            <InputLabel htmlFor=\"coffee-size\">Size</InputLabel>\r\n              <Select\r\n                autoFocus\r\n                value={size}\r\n                onChange={handleSizeChange}\r\n                inputProps={{\r\n                  name: 'coffee-size',\r\n                  id: 'coffee-size',\r\n                }}\r\n              >\r\n                <MenuItem value=\"Small\">Small</MenuItem>\r\n                <MenuItem value=\"Medium\">Medium</MenuItem>\r\n                <MenuItem value=\"Large\">Large</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n            <FormControl className={classes.formControl}>\r\n            <TextField\r\n                id=\"standard-number\"\r\n                label=\"Amount\"\r\n                type=\"number\"\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n                InputProps={{\r\n                    inputProps: { \r\n                        max: 10, min: 1 \r\n                    }\r\n                }}\r\n                onChange={handleAmountChange}\r\n            />\r\n            </FormControl>\r\n            <br />\r\n            <Button \r\n                onClick={() => {\r\n                    if (amount > 0 && amount < 11) {\r\n                      let tempData = [];\r\n                      console.log('cartItems', cartItems)\r\n                      tempItem.size = size;\r\n                      tempItem.amount = amount;\r\n                      tempItem.price = tempItem.prices[size];\r\n                      tempData.push(tempItem);\r\n                      console.log('tempItem', tempItem)\r\n                      console.log('tempData', tempData)\r\n                      const currentItems = cartItems;\r\n                      console.log('currentItems', currentItems)\r\n                      const newCart = tempData.concat(currentItems);\r\n                      console.log('newCart', newCart)\r\n                      setCartItems(newCart);\r\n                      setOpenSuccess(true);\r\n                      handleClose();\r\n                    }\r\n                }} \r\n                variant=\"contained\" \r\n                color=\"primary\"\r\n            >\r\n            Add\r\n          </Button>\r\n          </form>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Order;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components'\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport data from '../../data.json';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Order from '../Order/Order';\r\n\r\nconst menuItems = data.menu;\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      minWidth: 275,\r\n    },\r\n    title: {\r\n      fontSize: 14,\r\n    },\r\n    description: {\r\n        fontSize: 12,\r\n      },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n  });\r\n\r\n  const MenuWrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex-wrap: wrap;\r\n    margin-top: 2rem;`;\r\n\r\n  const MenuItems = styled.div`\r\n    color: #3f51b5;\r\n    &:hover {\r\n        transform: scale(1.1)\r\n      }\r\n    padding-right: 3rem;\r\n    padding-bottom: 3rem;`;\r\n\r\nconst Menu = ({ cartItems, setCartItems, tempItem, setTempItem, setOpenSuccess }) => {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const updateOrder = (item) => {\r\n    setTempItem(item);\r\n    setOpen(true);\r\n  }\r\n\r\n    const classes = useStyles();\r\n\r\n    const HtmlTooltip = withStyles((theme) => ({\r\n      tooltip: {\r\n        backgroundColor: '#f5f5f9',\r\n        color: 'rgba(0, 0, 0, 0.87)',\r\n        maxWidth: 220,\r\n        fontSize: theme.typography.pxToRem(12),\r\n        border: '1px solid #dadde9',\r\n      },\r\n    }))(Tooltip);\r\n\r\n    return (\r\n        <MenuWrapper>    \r\n          <Order open={open} setOpen={setOpen} tempItem={tempItem} setOpenSuccess={setOpenSuccess} cartItems={cartItems} setCartItems={setCartItems} />      \r\n           {menuItems.map((item, index) => \r\n            <MenuItems key={index} onClick={() => updateOrder(item)}>\r\n                <HtmlTooltip\r\n                  title={\r\n                    <>\r\n                      <Typography color=\"inherit\">Click to Order</Typography>\r\n                      <small>Small: ${item.prices.Small} Medium: ${item.prices.Medium} Large: ${item.prices.Large}</small>\r\n                    </>\r\n                  }\r\n                >\r\n                  <Card className={classes.root}>\r\n                  <CardContent>\r\n                      <Typography className={classes.title} gutterBottom>\r\n                      {item.name}\r\n                      </Typography>\r\n                      <img src={item.image} alt=\"\" />\r\n                      <Typography className={classes.description} color=\"textSecondary\">\r\n                      {item.description}<br /><i>From ${item.prices.Small}</i>\r\n                      </Typography>\r\n                  </CardContent>\r\n                  </Card>\r\n                </HtmlTooltip>\r\n            </MenuItems>)\r\n            }\r\n        </MenuWrapper>\r\n    )\r\n}\r\n\r\nMenu.propTypes = {\r\n    cartItems: PropTypes.array.isRequired,\r\n    setCartItems: PropTypes.func.isRequired,\r\n  }\r\n\r\nexport default Menu","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nconst CartWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-top: 2rem;    \r\n`;\r\n\r\nconst Cart = ({ cartItems, setCartItems, setOpenSuccess, openCart, setOpenCart,setOrderSuccess }) => {\r\nconst currency = new Intl.NumberFormat('en-US', {\r\n    style: 'currency',\r\n    currency: 'USD',\r\n  });\r\n\r\nconst removeItem = (item) => {\r\n  const newItems = cartItems.filter(x => x.id !== item.id && x.size !== item.size);\r\n  setCartItems(newItems);\r\n  setOpenSuccess(true);\r\n}\r\n\r\nconst amount = cartItems ? cartItems.map(item => item.price * item.amount) : 0;\r\nconst subtotal = (amount.length > 0) ? amount.reduce((x, y) => parseFloat(x) + parseFloat(y)) : 0;\r\nconst taxes = subtotal * .09;\r\nconst total = subtotal + taxes;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: '100%',\r\n      maxWidth: 360,\r\n      backgroundColor: theme.palette.background.paper,\r\n      \r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  const handleClose = () => {\r\n    setOpenCart(false);\r\n  };\r\n\r\n    return (\r\n        <CartWrapper>\r\n          <Dialog\r\n        fullWidth={true}\r\n        maxWidth={'sm'}\r\n        open={openCart}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"max-width-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"max-width-dialog-title\">Cart Summary</DialogTitle>\r\n        <DialogContent>\r\n            <center>\r\n          <DialogContentText>\r\n          <List className={classes.root}>\r\n           {cartItems && cartItems.length > 0 ? \r\n           cartItems.map((item, index) => \r\n            <div key={index}>\r\n                     <ListItem>\r\n                        <ListItemAvatar>\r\n                            <Tooltip title=\"Delete\" arrow>\r\n                            <IconButton aria-label=\"delete\">\r\n                                <DeleteIcon onClick={() => removeItem(item)} />\r\n                            </IconButton>\r\n                            </Tooltip>\r\n                        </ListItemAvatar>\r\n                        <ListItemText primary={`x${item.amount} ${item.size} ${item.name}`} secondary={`${currency.format(parseFloat(item.price * item.amount))}`}/>\r\n                    </ListItem>\r\n                    <Divider variant=\"inset\" component=\"li\" />\r\n            </div>       \r\n            )                     \r\n            : 'Your cart is empty!'}\r\n            {cartItems.length > 0 &&\r\n            <>\r\n                <i>Subtotal: {currency.format(subtotal)}<br />\r\n                Tax: {currency.format(taxes)}<br /></i>\r\n                <b>Total: {currency.format(total)}</b><br /><br />\r\n                <Button variant=\"contained\" color=\"primary\" onClick={() => { setOpenCart(false); setCartItems([]); setOrderSuccess(true);}} >Checkout</Button>\r\n            </>\r\n            }\r\n            </List>\r\n          </DialogContentText>\r\n          </center>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n        </CartWrapper>\r\n    )\r\n}\r\n\r\nCart.propTypes = {\r\n    cartItems: PropTypes.array.isRequired,\r\n    setCartItems: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Cart","import './App.css';\nimport { React, useState, useEffect } from 'react';\nimport Header from './Components/Header/Header';\nimport Menu from './Components/Menu/Menu';\nimport Cart from './Components/Cart/Cart';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nconst Alert = (props) => {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst App = () => {\n  const [cartItems, setCartItems] = useState([]);\n  const [tempItem, setTempItem] = useState({});\n  const [open, setOpenSuccess] = useState(false);\n  const [openCart, setOpenCart] = useState(false);\n  const [orderSuccess, setOrderSuccess] = useState(false);\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpenSuccess(false);\n  };\n\n  const handleCloseOrder = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOrderSuccess(false);\n  };\n\n  useEffect(() => {\n  }, [cartItems]);\n\n  return (\n    <div className=\"App\">\n    <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity=\"success\">\n          Cart Updated!\n        </Alert>\n      </Snackbar>\n      <Snackbar open={orderSuccess} autoHideDuration={6000} onClose={handleCloseOrder}>\n        <Alert onClose={handleCloseOrder} severity=\"info\">\n          Order Placed!\n        </Alert>\n      </Snackbar>\n      <Header cartItems={cartItems} setOpenCart={setOpenCart} />\n          <Menu cartItems={cartItems} setCartItems={setCartItems} tempItem={tempItem} setTempItem={setTempItem} setOpenSuccess={setOpenSuccess} />\n          <Cart cartItems={cartItems} setCartItems={setCartItems} setOpenSuccess={setOpenSuccess} openCart={openCart} setOpenCart={setOpenCart} setOrderSuccess={setOrderSuccess} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}